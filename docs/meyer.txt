//http://www.beanshell.org/

// Add jscl.jar to the classpath

// Reference : Henning Meyer, my boolean problem ( http://groups.google.com/group/sci.math.symbolic/browse_frm/thread/318369ef90df4358/ )

import jscl.math.*;
import jscl.math.polynomial.*;

Debug.setOutputStream(System.out);

nlen=2;
len=1<<(nlen-1);
v=new Vector();
for(i=0;i<nlen;i++) v.addElement(Variable.valueOf("n["+i+"]"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("a["+i+"]'"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("b["+i+"]'"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("m["+i+"]"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("a["+i+"]"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("b["+i+"]"));
for(i=0;i<len;i++) v.addElement(Variable.valueOf("t["+i+"]"));
vars=new Variable[v.size()];
v.copyInto(vars);

array(s) {
	Generic[] a=new Generic[len];
	for(int i=0;i<a.length;i++) a[i]=Expression.valueOf(s.substring(0,1)+"["+i+"]"+s.substring(1));
	return a;
}

nconstraint(n) {
	Generic[] n_=array("n");
	Generic nc=JSCLInteger.valueOf(1);
	for(int i=0;i<nlen;i++) {
		int c=1-((n&(1<<i))>>i);
		nc=nc.multiply(n_[i].add(JSCLInteger.valueOf(c)));
	}
	return nc;
}

ni=new Generic[len];
for(n=0;n<len;n++) ni[n]=nconstraint(n);

rightShift(a,i) {
	Generic s=JSCLInteger.valueOf(0);
	for(int n=0;n<len;n++) {
		if(i<a.length-n) s=s.add(a[i+n].multiply(ni[n]));
	}
	return s;
}

leftShift(a,i) {
	Generic s=JSCLInteger.valueOf(0);
	for(int n=0;n<len;n++) {
		if(i>=n) s=s.add(a[i-n].multiply(ni[n]));
	}
	return s;
}

t=array("t");
a=array("a");
b=array("b");
a_=array("a'");
b_=array("b'");
m=array("m");
v=new Vector();
for(i=0;i<len;i++) v.addElement(t[i].add(rightShift(a,i).add(b[i]).multiply(m[i])));
for(i=0;i<len;i++) v.addElement(a_[i].add(a[i].add(leftShift(t,i))));
for(i=0;i<len;i++) v.addElement(b_[i].add(b[i].add(t[i])));
eqs=new Generic[v.size()];
v.copyInto(eqs);
t=System.currentTimeMillis();
basis=Basis.compute(eqs,vars,Monomial.lexicographic,2,Basis.DEFINING_EQS);
t=System.currentTimeMillis()-t;
print(basis);
print(t);
