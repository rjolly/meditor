import scala.language.implicitConversions
import scas.{ModInteger, <math><integers/></math>, int2bigInt}
import scas.power.Lexicographic
import scas.polynomial.TreePolynomial
import TreePolynomial.coef2poly

given r as TreePolynomial[<math><integers/></math>, Array[Int]](using <math><msub><integers/><cn>2</cn></msub></math>, Lexicographic("<math><ci>x</ci></math>"))
val Array(<math><ci>x</ci></math>) = r.generators
import r.+

assert (<math><cn>1</cn></math> + <math><ci>x</ci></math> + <math><cn>1</cn></math> >< <math><ci>x</ci></math>)
assert (r.toString == "ModInteger(2)[x]")
