import scas.base.{<math><integers/></math>, <math><rationals/></math>}
import scas.polynomial.tree.UnivariatePolynomial
import scas.quotient.Quotient
import <math><integers/></math>.given
import <math><rationals/></math>.given

val r = UnivariatePolynomial(<math><rationals/></math>)("<math><ci>x</ci></math>")
val <math><list><ci>x</ci></list></math> = r.generators
import r.given

val s = Quotient(<math><mrow><rationals/><mfenced open="[" close="]"><ci>x</ci></mfenced></mrow></math>)
import s.{ring => _, given}

assert (<math><ci>x</ci></math>/(<math><apply><times/><cn>2</cn><ci>x</ci></apply></math>) >< <math><cn type="rational">1<sep/>2</cn></math>)
assert (s == <math><mrow><rationals/><mfenced><ci>x</ci></mfenced></mrow></math>)
