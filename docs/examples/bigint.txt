import scas.base.<math><integers/></math>
import <math><integers/></math>.{abs, gcd, lcm, given}

assert(BigInteger("<math><cn>1</cn></math>") + <math><cn>1</cn></math> >< <math><cn>1</cn></math> + BigInteger("<math><cn>1</cn></math>"))
assert(BigInteger("<math><cn>1</cn></math>") - BigInteger("<math><cn>1</cn></math>") >< <math><cn>0</cn></math>)
assert(BigInteger("<math><cn>2</cn></math>") \ <math><cn>2</cn></math> >< BigInteger("<math><cn>4</cn></math>"))
assert(BigInteger("<math><cn>2</cn></math>") \ <math><cn>64</cn></math> >< BigInteger("18446744073709551616"))
assert(BigInteger("<math><cn>2</cn></math>") \ BigInteger("2") >< <math><cn>4</cn></math>)
assert(BigInteger("<math><cn>2</cn></math>") \:BigInteger("2") >< <math><cn>4</cn></math>)
assert(BigInteger("<math><cn>2</cn></math>") \ <math><cn>2</cn></math> >< <math><cn>4</cn></math>)
assert(BigInteger("<math><cn>2</cn></math>") \:<math><cn>2</cn></math> >< <math><cn>4</cn></math>)
assert(<math><cn>2</cn></math> \ BigInteger("<math><cn>2</cn></math>") >< <math><cn>4</cn></math>)
assert(<math><cn>2</cn></math> \:BigInteger("<math><cn>2</cn></math>") >< <math><cn>4</cn></math>)
assert(<math><cn>2</cn></math> \ <math><cn>2</cn></math> >< <math><cn>4</cn></math>)
assert(<math><cn>2</cn></math> \:<math><cn>2</cn></math> >< <math><cn>4</cn></math>)
assert(<math><cn>2</cn></math> \:<math><cn>2</cn></math> \:<math><cn>3</cn></math> >< <math><cn>256</cn></math>)
assert((<math><cn>2</cn></math> \:<math><cn>2</cn></math>) \ <math><cn>3</cn></math> >< <math><cn>64</cn></math>)
assert(abs(<math><cn>-1</cn></math>) >< -BigInteger("<math><cn>-1</cn></math>"))
assert(gcd(<math><cn>3</cn></math>, <math><cn>5</cn></math>) >< <math><cn>1</cn></math>)
assert(lcm(<math><cn>3</cn></math>, <math><cn>5</cn></math>) >< <math><cn>15</cn></math>)
assert(gcd(BigInteger("<math><cn>3</cn></math>"), BigInteger("<math><cn>5</cn></math>")) >< <math><cn>1</cn></math>)
assert(lcm(BigInteger("<math><cn>3</cn></math>"), BigInteger("<math><cn>5</cn></math>")) >< <math><cn>15</cn></math>)
