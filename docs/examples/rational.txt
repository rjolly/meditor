import scas.base.conversion.{<math><integers/></math>, <math><rationals/></math>}
import <math><integers/></math>.int2bigInt
import <math><rationals/></math>.given

assert (Rational("<math><cn>1</cn></math>") >< <math><cn>1</cn></math>)
assert (Rational("<math><cn>1</cn></math>", "<math><cn>2</cn></math>") >< <math><cn type="rational">1<sep/>2</cn></math>)
assert (<math><cn>1</cn></math> + <math><cn type="rational">1<sep/>2</cn></math> >< <math><cn type="rational">1<sep/>2</cn></math> + <math><cn>1</cn></math>)
assert (<math><cn type="rational">1<sep/>2</cn></math> + <math><cn type="rational">3<sep/>4</cn></math> >< <math><cn type="rational">5<sep/>4</cn></math>)
assert (<math><cn type="rational">3<sep/>2</cn></math> * (<math><cn type="rational">2<sep/>3</cn></math>) >< 1)
assert (<math><cn type="rational">3<sep/>2</cn></math> / (<math><cn type="rational">2<sep/>3</cn></math>) >< <math><cn type="rational">9<sep/>4</cn></math>)
assert ((<math><cn type="rational">3<sep/>2</cn></math>) \ 2 >< <math><cn type="rational">9<sep/>4</cn></math>)
