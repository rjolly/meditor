import scas.base.<math><integers/></math>
import scas.polynomial.tree.MultivariatePolynomial
import <math><integers/></math>.given

val r = MultivariatePolynomial.withSubresGCD(<math><integers/></math>)("<math><ci>x</ci></math>")
val <math><list><ci>x</ci></list></math> = r.generators
import r.{gcd, given}

assert (gcd(<math><cn>0</cn></math>, <math><cn>0</cn></math>) >< <math><cn>0</cn></math>)
assert (gcd(<math><ci>x</ci></math>, <math><cn>0</cn></math>) >< <math><ci>x</ci></math>)
assert (gcd(<math><cn>1</cn></math>, <math><ci>x</ci></math>) >< <math><cn>1</cn></math>)
assert (gcd((<math><apply><plus/><ci>x</ci><cn>1</cn></apply></math>)*(<math><apply><plus/><ci>x</ci><cn>1</cn></apply></math>), (<math><apply><plus/><ci>x</ci><cn>1</cn></apply></math>)*(<math><apply><minus/><ci>x</ci><cn>1</cn></apply></math>)) >< <math><apply><plus/><ci>x</ci><cn>1</cn></apply></math>)
