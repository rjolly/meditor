import scas.base.{<math><integers/></math>, <math><rationals/></math>}
import scas.residue.AlgebraicNumber
import scas.variable.Variable
import <math><integers/></math>.given
import <math><rationals/></math>.Implicits.given

val r = AlgebraicNumber(<math><rationals/></math>)(Variable.sqrt(BigInteger("<math><cn>2</cn></math>")))
val <math><list><ci>x</ci></list></math> = r.generators
import r.{sqrt, instance, coef2poly}
r.update(<math><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></math>)

assert (<math><cn>2</cn></math> >< <math><apply><power/><ci>x</ci><cn>2</cn></apply></math>)
assert (<math><ci>x</ci></math> >< <math><apply><root/><cn>2</cn></apply></math>)
