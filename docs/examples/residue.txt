import scas.base.{<math><integers/></math>, <math><rationals/></math>}
import scas.polynomial.tree.UnivariatePolynomial
import scas.residue.Residue
import <math><integers/></math>.given
import <math><rationals/></math>.given

val r = UnivariatePolynomial(<math><rationals/></math>)("x")
val <math><list><ci>x</ci></list></math> = r.generators
import r.given

val s = Residue(using <math><apply><rationals/><list><ci>x</ci></list></apply></math>)(<math><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></math>)
import s.given

assert (<math><cn>2</cn></math> >< <math><apply><power/><ci>x</ci><cn>2</cn></apply></math>)
assert (Rational("2") - x\2 >< 0)
assert (s.toString == <math><msub><apply><rationals/><list><ci>x</ci></list></apply><list><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></list></msub></math>.toString)
assert (s.math == <math><msub><apply><rationals/><list><ci>x</ci></list></apply><list><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></list></msub></math>.math)
