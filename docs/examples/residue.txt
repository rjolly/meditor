import scas.base.{<math><integers/></math>, <math><rationals/></math>}
import scas.polynomial.tree.UnivariatePolynomial
import scas.residue.Residue
import <math><integers/></math>.given
import <math><rationals/></math>.Implicits.given

val r = UnivariatePolynomial(using <math><rationals/></math>)("<math><ci>x</ci></math>")
val <math><list><ci>x</ci></list></math> = r.generators
import r.{instance, coef2poly}

val s = Residue(<math><mrow><rationals/><mfenced open="[" close="]"><ci>x</ci></mfenced></mrow></math>)(<math><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></math>)
import s.instance

assert (<math><cn>2</cn></math> >< <math><apply><power/><ci>x</ci><cn>2</cn></apply></math>)
assert (Rational("<math><cn>2</cn></math>") >< <math><apply><power/><ci>x</ci><cn>2</cn></apply></math>)
assert (s == <math><msub><mrow><rationals/><mfenced open="[" close="]"><ci>x</ci></mfenced></mrow><mfenced><apply><minus/><cn>2</cn><apply><power/><ci>x</ci><cn>2</cn></apply></apply></mfenced></msub></math>)
