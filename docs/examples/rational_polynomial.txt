import scas.base.{<math><integers/></math>, <math><rationals/></math>}
import scas.power.Lexicographic
import scas.polynomial.tree.Polynomial
import <math><rationals/></math>.{ring2quotient, %%}
import <math><integers/></math>.int2bigInt

val r = Polynomial(using <math><rationals/></math>, Lexicographic[Int]("<math><ci>x</ci></math>"))
val <math><list><ci>x</ci></list></math> = r.generators.toList
import r.given

assert (<math><ci>x</ci></math> + <math><cn type="rational">1<sep/>2</cn></math> >< <math><cn type="rational">1<sep/>2</cn></math> + <math><ci>x</ci></math>)
assert (<math><ci>x</ci></math> + <math><cn>1</cn></math> >< <math><cn>1</cn></math> + <math><ci>x</ci></math>)
