import scala.language.experimental.genericNumberLiterals
import scas.{<math><integers/></math>, <math><rationals/></math>, bigInt2rational}
import scas.power.Lexicographic
import scas.polynomial.TreePolynomial
import TreePolynomial.coef2poly
import <math><integers/></math>.given
import <math><rationals/></math>.given

assert (Rational(<math><cn>1</cn></math>) >< <math><cn>1</cn></math>)
assert (Rational(<math><cn>1</cn></math>, <math><cn>2</cn></math>) >< <math><cn type="rational">1<sep/>2</cn></math>)
{
  val r = new TreePolynomial(using <math><rationals/></math>, Lexicographic[Int]("<math><ci>x</ci></math>"))
  val <math><list><ci>x</ci></list></math> = r.generators.toList
  import r.given

  assert (<math><ci>x</ci></math> + <math><cn type="rational">1<sep/>2</cn></math> >< <math><cn type="rational">1<sep/>2</cn></math> + <math><ci>x</ci></math>)
  assert (<math><ci>x</ci></math> + <math><cn>1</cn></math> >< <math><cn>1</cn></math> + <math><ci>x</ci></math>)
}
